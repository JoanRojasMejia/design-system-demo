# # ---------------------------
# # Imagen para levantar Storybook en modo producción
# # ---------------------------

# ---------------------------
# Etapa de construcción (builder)
# ---------------------------
FROM --platform=$BUILDPLATFORM node:23.6.1-alpine3.21 AS builder

# Instalar dependencias del sistema y limpiar cache
RUN apk add --no-cache git && \
rm -rf /var/cache/apk/*

# Configurar Corepack y Yarn
RUN corepack enable && \
    corepack prepare yarn@4.7.0 --activate

WORKDIR /app

# Copiar archivos necesarios para instalación de dependencias
COPY .yarnrc.yml .
COPY package.json .

# Variables de entorno (usadas en build-time)
ARG NPM_GITHUB_TOKEN
ARG FONTAWESOME_TOKEN

# Configurar entorno
ENV STORYBOOK_DISABLE_TELEMETRY=true

# Instalar dependencias con cache
RUN yarn install

# Copiar todo el proyecto
COPY . .

# Construir Storybook
RUN yarn build-storybook

# ---------------------------
# Etapa de producción (nginx)
# ---------------------------
FROM nginx:1.25.4-alpine

# Copiar configuración de nginx optimizada
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copiar build de Storybook
COPY --from=builder /app/storybook-static /usr/share/nginx/html

# Configurar permisos para Render
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Exponer puerto y ejecutar nginx
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]